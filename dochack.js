/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI37032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI181074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI41662 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI183532 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73448 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73444 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73440 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73436 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73432 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73428 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73424 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73420 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73416 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73412 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73408 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73404 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73400 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73396 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73392 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73388 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73384 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73380 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73376 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73372 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI73205 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI73283 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI73281 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI73227 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI73565 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73563 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73561 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI73231 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI73229 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI75245 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI41650 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI41658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI37006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI55141 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI41608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI41714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI37016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI37040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI37042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI41708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI41626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI41628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI41642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI41646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI41646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41646.node = NNI41646;
var NNI41642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41642.node = NNI41642;
var NNI41628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41628.node = NNI41628;
NTI41708.base = NTI41626;
NTI41714.base = NTI41626;
var NNI41626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI41708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI37042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI37040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI37040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI37016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI41714, name: "up", sons: null}]};
NTI41626.node = NNI41626;
var NNI41608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41608.node = NNI41608;
NTI41626.base = NTI41608;
NTI41628.base = NTI41626;
NTI41642.base = NTI41628;
NTI41646.base = NTI41642;
var NNI55141 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI37042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI37006, name: "Field1", sons: null}]};
NTI55141.node = NNI55141;
var NNI41658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41658.node = NNI41658;
NTI41658.base = NTI41628;
var NNI41650 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41650.node = NNI41650;
NTI41650.base = NTI41628;
NTI73561.base = NTI73229;
NTI73563.base = NTI73229;
NTI73565.base = NTI73229;
var NNI73227 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI73227, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI73227, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI73227, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI73227, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI73227, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI73227, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI73227, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI73227, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI73227, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI73227, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI73227, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI73227, name: "NotationNode", len: 0, sons: null}}};
NTI73227.node = NNI73227;
var NNI73283 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI37042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI37042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI37042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI37042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI37042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI37042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI37042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI37042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI37042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI37042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI37042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI37042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI37042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI37042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI37042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI37042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI37042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI37042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI37042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI37042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI37042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI37042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI37042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI37042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI37042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI37042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI37042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI37042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI37042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI37042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI37042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI37042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI37042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI37042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI37042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI37042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI37042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI37042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI37042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI37042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI37042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI37042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI37042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI37042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI37042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI37042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI37042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI37042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI37042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI37042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI37042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI37042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI37042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI37042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI37042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI37042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI37042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI37042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI37042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI37042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI37042, name: "overflow", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI37042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI37042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI37042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI37042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI37042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI37042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI37042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "pointerEvents", len: 0, typ: NTI37042, name: "pointerEvents", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI37042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI37042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI37042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI37042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI37042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI37042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI37042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI37042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI37042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI37042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI37042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI37042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI37042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI37042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI37042, name: "textTransform", sons: null}, 
{kind: 1, offset: "transform", len: 0, typ: NTI37042, name: "transform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI37042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI37042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI37042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI37042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI37042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI37006, name: "zIndex", sons: null}]};
NTI73283.node = NNI73283;
NTI73283.base = NTI41608;
NTI73281.base = NTI73283;
var NNI73231 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI73561, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI73563, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI73565, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI37042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI73229, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI73229, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI73229, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI37042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI73227, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI37042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI73229, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI73229, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI37042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI73281, name: "style", sons: null}]};
NTI73231.node = NNI73231;
var NNI73205 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI73372, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI73376, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI73380, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI73384, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI73388, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI73392, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI73396, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI73400, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI73404, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI73408, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI73412, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI73416, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI73420, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI73424, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI73428, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI73432, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI73436, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI73440, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI73444, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI73448, name: "onunload", sons: null}]};
NTI73205.node = NNI73205;
NTI73205.base = NTI41608;
NTI73231.base = NTI73205;
NTI73229.base = NTI73231;
NTI75245.base = NTI73229;
NTI183532.base = NTI37042;
var NNI41662 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI41662.node = NNI41662;
NTI41662.base = NTI41628;
var NNI181074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI37006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI37032, name: "Field1", sons: null}]};
NTI181074.node = NNI181074;

function makeNimstrLit(c_55995) {
		  var ln = c_55995.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_55995.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_57027, src_57028, ti_57029) {
	var result_57219 = null;

		switch (ti_57029.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_57001(ti_57029))) {
			result_57219 = src_57028;
			}
			else {
				result_57219 = [src_57028[0], src_57028[1]];
			}
			
			break;
		case 19:
			      if (dest_57027 === null || dest_57027 === undefined) {
        dest_57027 = {};
      }
      else {
        for (var key in dest_57027) { delete dest_57027[key]; }
      }
      for (var key in src_57028) { dest_57027[key] = src_57028[key]; }
      result_57219 = dest_57027;
    
			break;
		case 18:
		case 17:
			if (!((ti_57029.base == null))) {
			result_57219 = nimCopy(dest_57027, src_57028, ti_57029.base);
			}
			else {
			if ((ti_57029.kind == 17)) {
			result_57219 = (dest_57027 === null || dest_57027 === undefined) ? {m_type: ti_57029} : dest_57027;
			}
			else {
				result_57219 = (dest_57027 === null || dest_57027 === undefined) ? {} : dest_57027;
			}
			}
			nimCopyAux(result_57219, src_57028, ti_57029.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_57028 === null) {
        result_57219 = null;
      }
      else {
        if (dest_57027 === null || dest_57027 === undefined) {
          dest_57027 = new Array(src_57028.length);
        }
        else {
          dest_57027.length = src_57028.length;
        }
        result_57219 = dest_57027;
        for (var i = 0; i < src_57028.length; ++i) {
          result_57219[i] = nimCopy(result_57219[i], src_57028[i], ti_57029.base);
        }
      }
    
			break;
		case 28:
			      if (src_57028 !== null) {
        result_57219 = src_57028.slice(0);
      }
    
			break;
		default: 
			result_57219 = src_57028;
			break;
		}

	return result_57219;

}

function arrayConstr(len_57271, value_57272, typ_57273) {
		    var result = new Array(len_57271);
    for (var i = 0; i < len_57271; ++i) result[i] = nimCopy(null, value_57272, typ_57273);
    return result;
  

	
}

function cstrToNimstr(c_56012) {
		  var ln = c_56012.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_56012.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_56012.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_56029) {
		  if (s_56029 === null) return "";
  var len = s_56029.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_56029[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_56029[i] < 128)
      asciiPart[i] = fcc(s_56029[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_55618, ename_55619) {
		e_55618.name = ename_55619;
		if ((excHandler == 0)) {
		unhandledException(e_55618);
		}
		
		e_55618.trace = nimCopy(null, raw_write_stack_trace_55438(), NTI37040);
		throw e_55618;

	
}

function addInt(a_56403, b_56404) {
		    var result = a_56403 + b_56404;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_57290, a_57291, b_57292) {
			var Tmp1;

	var result_57293 = 0;

	BeforeRet: do {
			if (!(a_57291 <= i_57290)) Tmp1 = false; else {				Tmp1 = (i_57290 <= b_57292);			}		if (Tmp1) {
		result_57293 = i_57290;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_57290, a_57291, b_57292);
		}
		
	} while (false);

	return result_57293;

}

function subInt(a_56421, b_56422) {
		    var result = a_56421 - b_56422;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_57309, a_57310, b_57311) {
			var Tmp1;

	var result_57312 = 0;

	BeforeRet: do {
			if (!(a_57310 <= i_57309)) Tmp1 = false; else {				Tmp1 = (i_57309 <= b_57311);			}		if (Tmp1) {
		result_57312 = i_57309;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_57312;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_56439, b_56440) {
		    var result = a_56439 * b_56440;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_56758, b_56759) {
		var Tmp1;

	var result_56760 = 0;

	BeforeRet: do {
		if ((b_56759 <= a_56758)) {
		Tmp1 = a_56758;
		}
		else {
		Tmp1 = b_56759;
		}
		
		result_56760 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_56760;

}

function nimMin(a_56740, b_56741) {
		var Tmp1;

	var result_56742 = 0;

	BeforeRet: do {
		if ((a_56740 <= b_56741)) {
		Tmp1 = a_56740;
		}
		else {
		Tmp1 = b_56741;
		}
		
		result_56742 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_56742;

}
var nim_program_result = 0;
var global_raise_hook_51818 = [null];
var local_raise_hook_51823 = [null];
var out_of_mem_hook_51826 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var alternative_183285 = [null];

function is_fat_pointer_57001(ti_57003) {
	var result_57004 = false;

	BeforeRet: do {
		result_57004 = !((ConstSet1[ti_57003.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_57004;

}

function nimCopyAux(dest_57032, src_57033, n_57035) {
		switch (n_57035.kind) {
		case 0:
			break;
		case 1:
			      dest_57032[n_57035.offset] = nimCopy(dest_57032[n_57035.offset], src_57033[n_57035.offset], n_57035.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_57035.sons.length; i++) {
      nimCopyAux(dest_57032, src_57033, n_57035.sons[i]);
    }
    
			break;
		case 3:
			      dest_57032[n_57035.offset] = nimCopy(dest_57032[n_57035.offset], src_57033[n_57035.offset], n_57035.typ);
      for (var i = 0; i < n_57035.sons.length; ++i) {
        nimCopyAux(dest_57032, src_57033, n_57035.sons[i][1]);
      }
    
			break;
		}

	
}

function add_51838(x_51841, x_51841_Idx, y_51842) {
		      if (x_51841[x_51841_Idx] === null) { x_51841[x_51841_Idx] = []; }
      var off = x_51841[x_51841_Idx].length;
      x_51841[x_51841_Idx].length += y_51842.length;
      for (var i = 0; i < y_51842.length; ++i) {
        x_51841[x_51841_Idx][off+i] = y_51842.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_55136(f_55138) {
					var Tmp3;

	var result_55139 = [null];

		var it_55147 = f_55138;
		var i_55149 = 0;
		var total_55151 = 0;
		var temp_frames_55158 = arrayConstr(64, {Field0: null, Field1: 0}, NTI55141);
		L1: do {
				L2: while (true) {
					if (!!((it_55147 == null))) Tmp3 = false; else {						Tmp3 = (i_55149 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_55158[i_55149].Field0 = it_55147.procname;
					temp_frames_55158[i_55149].Field1 = it_55147.line;
					i_55149 += 1;
					total_55151 += 1;
					it_55147 = it_55147.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_55147 == null))) break L5;
					total_55151 += 1;
					it_55147 = it_55147.prev;
				}
		} while(false);
		result_55139[0] = nimCopy(null, [], NTI37040);
		if (!((total_55151 == i_55149))) {
		if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(makeNimstrLit("(")); } else { result_55139[0] = makeNimstrLit("("); };
		if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(cstrToNimstr(((total_55151 - i_55149))+"")); } else { result_55139[0] = cstrToNimstr(((total_55151 - i_55149))+"").slice(); };
		if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_55139[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_55421 = 0;
			var colontmp__183426 = 0;
			colontmp__183426 = (i_55149 - 1);
			var res_183431 = colontmp__183426;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_183431)) break L8;
						j_55421 = res_183431;
						add_51838(result_55139, 0, temp_frames_55158[j_55421].Field0);
						if ((0 < temp_frames_55158[j_55421].Field1)) {
						if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(makeNimstrLit(", line: ")); } else { result_55139[0] = makeNimstrLit(", line: "); };
						if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(cstrToNimstr((temp_frames_55158[j_55421].Field1)+"")); } else { result_55139[0] = cstrToNimstr((temp_frames_55158[j_55421].Field1)+"").slice(); };
						}
						
						if (result_55139[0] != null) { result_55139[0] = (result_55139[0]).concat(makeNimstrLit("\x0A")); } else { result_55139[0] = makeNimstrLit("\x0A"); };
						res_183431 -= 1;
					}
			} while(false);
		} while(false);

	return result_55139[0];

}

function raw_write_stack_trace_55438() {
	var result_55440 = null;

		if (!((framePtr == null))) {
		result_55440 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_55136(framePtr) || []), NTI37040);
		}
		else {
			result_55440 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI37040);
		}
		

	return result_55440;

}

function unhandledException(e_55499) {
		var buf_55500 = [[]];
		if (!(((e_55499.message != null ? e_55499.message.length : 0) == 0))) {
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_55500[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(e_55499.message); } else { buf_55500[0] = e_55499.message.slice(); };
		}
		else {
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_55500[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(makeNimstrLit(" [")); } else { buf_55500[0] = makeNimstrLit(" ["); };
		add_51838(buf_55500, 0, e_55499.name);
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(makeNimstrLit("]\x0A")); } else { buf_55500[0] = makeNimstrLit("]\x0A"); };
		if (buf_55500[0] != null) { buf_55500[0] = (buf_55500[0]).concat(raw_write_stack_trace_55438()); } else { buf_55500[0] = raw_write_stack_trace_55438().slice(); };
		var cbuf_55601 = toJSStr(buf_55500[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_55601);
  }
  else {
    throw cbuf_55601;
  }
  

	
}

function raiseOverflow() {
		var e_55852 = null;
		e_55852 = {m_type: NTI41646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_55852.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI37040);
		e_55852.parent = null;
		raiseException(e_55852, "OverflowError");

	
}

function is_whitespace_182639(text_182641) {
		     return !/[^\s]/.test(text_182641);
  

	
}

function is_whitespace_182656(x_182658) {
		var Tmp1;
		var Tmp2;

	var result_182659 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 134;
		if (!(x_182658.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_182639(x_182658.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_182658.nodeName == "#comment");		}		result_182659 = Tmp1;
	framePtr = F.prev;

	return result_182659;

}

function raiseIndexError(i_55925, a_55926, b_55927) {
		var e_55931 = null;
		e_55931 = {m_type: NTI41658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_55931.message = nimCopy(null, (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_55925)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_55926)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_55927)+"") || []), NTI37040);
		e_55931.parent = null;
		raiseException(e_55931, "IndexError");

	
}

function to_toc_182673(x_182675, father_182676) {
								var Tmp5;
						var Tmp6;
						var Tmp7;
						var Tmp8;
			var Tmp15;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_182675.nodeName == "UL")) {
		F.line = 139;
		var f_182695 = {heading: null, kids: [], sortId: (father_182676.kids != null ? father_182676.kids.length : 0), doSort: false};
		F.line = 140;
		var i_182697 = 0;
		L1: do {
			F.line = 141;
				L2: while (true) {
				if (!(i_182697 < x_182675.childNodes.length)) break L2;
					F.line = 142;
					var nxt_182698 = addInt(i_182697, 1);
					L3: do {
						F.line = 143;
							L4: while (true) {
								if (!(nxt_182698 < x_182675.childNodes.length)) Tmp5 = false; else {									Tmp5 = is_whitespace_182656(x_182675.childNodes[nxt_182698]);								}							if (!Tmp5) break L4;
								F.line = 144;
								nxt_182698 = addInt(nxt_182698, 1);
							}
					} while(false);
						if (!(nxt_182698 < x_182675.childNodes.length)) Tmp8 = false; else {							Tmp8 = (x_182675.childNodes[i_182697].nodeName == "LI");						}						if (!Tmp8) Tmp7 = false; else {							Tmp7 = (x_182675.childNodes[i_182697].childNodes.length == 1);						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_182675.childNodes[nxt_182698].nodeName == "UL");						}					if (Tmp6) {
					F.line = 147;
					var e_182723 = {heading: x_182675.childNodes[i_182697].childNodes[0], kids: [], sortId: (f_182695.kids != null ? f_182695.kids.length : 0), doSort: false};
					F.line = 148;
					var it_182724 = x_182675.childNodes[nxt_182698];
					L9: do {
						F.line = 149;
						var j_182731 = 0;
						F.line = 3096;
						var colontmp__183402 = 0;
						F.line = 149;
						colontmp__183402 = it_182724.childNodes.length;
						F.line = 3097;
						var i_183403 = 0;
						L10: do {
							F.line = 3098;
								L11: while (true) {
								if (!(i_183403 < colontmp__183402)) break L11;
									F.line = 149;
									j_182731 = i_183403;
									F.line = 150;
									to_toc_182673(it_182724.childNodes[j_182731], e_182723);
									F.line = 3100;
									i_183403 = addInt(i_183403, 1);
								}
						} while(false);
					} while(false);
					F.line = 151;
					if (f_182695.kids != null) { f_182695.kids.push(e_182723); } else { f_182695.kids = [e_182723]; };
					F.line = 152;
					i_182697 = addInt(nxt_182698, 1);
					}
					else {
						F.line = 154;
						to_toc_182673(x_182675.childNodes[i_182697], f_182695);
						F.line = 155;
						i_182697 = addInt(i_182697, 1);
					}
					
				}
		} while(false);
		F.line = 156;
		if (father_182676.kids != null) { father_182676.kids.push(f_182695); } else { father_182676.kids = [f_182695]; };
		}
		else {
		if (is_whitespace_182656(x_182675)) {
		}
		else {
		if ((x_182675.nodeName == "LI")) {
		F.line = 160;
		var idx_182766 = [];
		L12: do {
			F.line = 161;
			var i_182773 = 0;
			F.line = 3096;
			var colontmp__183407 = 0;
			F.line = 161;
			colontmp__183407 = x_182675.childNodes.length;
			F.line = 3097;
			var i_183408 = 0;
			L13: do {
				F.line = 3098;
					L14: while (true) {
					if (!(i_183408 < colontmp__183407)) break L14;
						F.line = 161;
						i_182773 = i_183408;
						if (!(is_whitespace_182656(x_182675.childNodes[i_182773]))) {
						F.line = 162;
						if (idx_182766 != null) { idx_182766.push(i_182773); } else { idx_182766 = [i_182773]; };
						}
						
						F.line = 3100;
						i_183408 = addInt(i_183408, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_182766 != null ? idx_182766.length : 0) == 2)) Tmp15 = false; else {				Tmp15 = (x_182675.childNodes[idx_182766[chckIndx(1, 0, idx_182766.length+0-1)-0]].nodeName == "UL");			}		if (Tmp15) {
		F.line = 164;
		var e_182804 = {heading: x_182675.childNodes[idx_182766[chckIndx(0, 0, idx_182766.length+0-1)-0]], kids: [], sortId: (father_182676.kids != null ? father_182676.kids.length : 0), doSort: false};
		F.line = 166;
		var it_182805 = x_182675.childNodes[idx_182766[chckIndx(1, 0, idx_182766.length+0-1)-0]];
		L16: do {
			F.line = 167;
			var j_182812 = 0;
			F.line = 3096;
			var colontmp__183413 = 0;
			F.line = 167;
			colontmp__183413 = it_182805.childNodes.length;
			F.line = 3097;
			var i_183414 = 0;
			L17: do {
				F.line = 3098;
					L18: while (true) {
					if (!(i_183414 < colontmp__183413)) break L18;
						F.line = 167;
						j_182812 = i_183414;
						F.line = 168;
						to_toc_182673(it_182805.childNodes[j_182812], e_182804);
						F.line = 3100;
						i_183414 = addInt(i_183414, 1);
					}
			} while(false);
		} while(false);
		F.line = 169;
		if (father_182676.kids != null) { father_182676.kids.push(e_182804); } else { father_182676.kids = [e_182804]; };
		}
		else {
			L19: do {
				F.line = 171;
				var i_182826 = 0;
				F.line = 3096;
				var colontmp__183418 = 0;
				F.line = 171;
				colontmp__183418 = x_182675.childNodes.length;
				F.line = 3097;
				var i_183419 = 0;
				L20: do {
					F.line = 3098;
						L21: while (true) {
						if (!(i_183419 < colontmp__183418)) break L21;
							F.line = 171;
							i_182826 = i_183419;
							F.line = 172;
							to_toc_182673(x_182675.childNodes[i_182826], father_182676);
							F.line = 3100;
							i_183419 = addInt(i_183419, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 174;
		if (father_182676.kids != null) { father_182676.kids.push({heading: x_182675, kids: [], sortId: (father_182676.kids != null ? father_182676.kids.length : 0), doSort: false}); } else { father_182676.kids = [{heading: x_182675, kids: [], sortId: (father_182676.kids != null ? father_182676.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_182307(x_182309, heading_182310, items_182313, items_182313_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_182309 == null)) {
		F.line = 81;
		break BeforeRet;
		}
		
			if (!!((x_182309.heading == null))) Tmp1 = false; else {				Tmp1 = (x_182309.heading.textContent == heading_182310);			}		if (Tmp1) {
		L2: do {
			F.line = 83;
			var i_182341 = 0;
			F.line = 3096;
			var colontmp__183443 = 0;
			F.line = 83;
			colontmp__183443 = (x_182309.kids != null ? x_182309.kids.length : 0);
			F.line = 3097;
			var i_183444 = 0;
			L3: do {
				F.line = 3098;
					L4: while (true) {
					if (!(i_183444 < colontmp__183443)) break L4;
						F.line = 83;
						i_182341 = i_183444;
						F.line = 84;
						if (items_182313[items_182313_Idx] != null) { items_182313[items_182313_Idx].push(x_182309.kids[chckIndx(i_182341, 0, x_182309.kids.length+0-1)-0].heading); } else { items_182313[items_182313_Idx] = [x_182309.kids[chckIndx(i_182341, 0, x_182309.kids.length+0-1)-0].heading]; };
						F.line = 3100;
						i_183444 = addInt(i_183444, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 86;
				var i_182360 = 0;
				F.line = 3096;
				var colontmp__183448 = 0;
				F.line = 86;
				colontmp__183448 = (x_182309.kids != null ? x_182309.kids.length : 0);
				F.line = 3097;
				var i_183449 = 0;
				L6: do {
					F.line = 3098;
						L7: while (true) {
						if (!(i_183449 < colontmp__183448)) break L7;
							F.line = 86;
							i_182360 = i_183449;
							F.line = 87;
							var it_182361 = x_182309.kids[chckIndx(i_182360, 0, x_182309.kids.length+0-1)-0];
							F.line = 88;
							extract_items_182307(it_182361, heading_182310, items_182313, items_182313_Idx);
							F.line = 3100;
							i_183449 = addInt(i_183449, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_182020(tag_182022, kids_182024) {
	var result_182025 = null;

	var F={procname:"dochack.tree",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 11;
		result_182025 = document.createElement(toJSStr(tag_182022));
		L1: do {
			F.line = 12;
			var k_182056 = null;
			F.line = 2328;
			var i_183466 = 0;
			L2: do {
				F.line = 2329;
					L3: while (true) {
					if (!(i_183466 < (kids_182024 != null ? kids_182024.length : 0))) break L3;
						F.line = 12;
						k_182056 = kids_182024[chckIndx(i_183466, 0, kids_182024.length+0-1)-0];
						F.line = 13;
						result_182025.appendChild(k_182056);
						F.line = 2331;
						i_183466 = addInt(i_183466, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_182025;

}

function text_182122(s_182124) {
	var result_182125 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 27;
		result_182125 = document.createTextNode(s_182124);
	framePtr = F.prev;

	return result_182125;

}

function sys_fatal_59836(message_59840) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3056;
		var e_59842 = null;
		F.line = 3057;
		e_59842 = {m_type: NTI41650, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 3058;
		e_59842.message = nimCopy(null, message_59840, NTI37040);
		F.line = 3059;
		raiseException(e_59842, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_59832(msg_59834) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3774;
		sys_fatal_59836(msg_59834);
	framePtr = F.prev;

	
}

function failed_assert_impl_59875(msg_59877) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3781;
		raise_assert_59832(msg_59877);
	framePtr = F.prev;

	
}

function uncovered_182920(x_182922) {
			var Tmp1;
		var Tmp2;

	var result_182923 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_182922.kids != null ? x_182922.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_182922.heading == null));			}		if (Tmp1) {
		F.line = 194;
		if (!(x_182922.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_182922;
		}
		else {
		Tmp2 = null;
		}
		
		result_182923 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 195;
		result_182923 = {heading: x_182922.heading, kids: [], sortId: x_182922.sortId, doSort: x_182922.doSort};
		L3: do {
			F.line = 197;
			var i_182961 = 0;
			F.line = 3096;
			var colontmp__183478 = 0;
			F.line = 197;
			colontmp__183478 = (x_182922.kids != null ? x_182922.kids.length : 0);
			F.line = 3097;
			var i_183479 = 0;
			L4: do {
				F.line = 3098;
					L5: while (true) {
					if (!(i_183479 < colontmp__183478)) break L5;
						F.line = 197;
						i_182961 = i_183479;
						F.line = 198;
						var y_182962 = uncovered_182920(x_182922.kids[chckIndx(i_182961, 0, x_182922.kids.length+0-1)-0]);
						if (!((y_182962 == null))) {
						F.line = 199;
						if (result_182923.kids != null) { result_182923.kids.push(y_182962); } else { result_182923.kids = [y_182962]; };
						}
						
						F.line = 3100;
						i_183479 = addInt(i_183479, 1);
					}
			} while(false);
		} while(false);
		if (((result_182923.kids != null ? result_182923.kids.length : 0) == 0)) {
		F.line = 200;
		result_182923 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_182923;

}

function merge_tocs_182996(orig_182998, news_182999) {
	var result_183000 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 203;
		result_183000 = uncovered_182920(orig_182998);
		if ((result_183000 == null)) {
		F.line = 205;
		result_183000 = news_182999;
		}
		else {
			L1: do {
				F.line = 207;
				var i_183020 = 0;
				F.line = 3096;
				var colontmp__183472 = 0;
				F.line = 207;
				colontmp__183472 = (news_182999.kids != null ? news_182999.kids.length : 0);
				F.line = 3097;
				var i_183473 = 0;
				L2: do {
					F.line = 3098;
						L3: while (true) {
						if (!(i_183473 < colontmp__183472)) break L3;
							F.line = 207;
							i_183020 = i_183473;
							F.line = 208;
							if (result_183000.kids != null) { result_183000.kids.push(news_182999.kids[chckIndx(i_183020, 0, news_182999.kids.length+0-1)-0]); } else { result_183000.kids = [news_182999.kids[chckIndx(i_183020, 0, news_182999.kids.length+0-1)-0]]; };
							F.line = 3100;
							i_183473 = addInt(i_183473, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_183000;

}

function build_toc_183041(orig_183043, types_183045, procs_183046) {
	var result_183047 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 211;
		var new_stuff_183061 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 212;
			var t_183214 = null;
			F.line = 3822;
			var i_183461 = 0;
			F.line = 3823;
			var l_183462 = (types_183045 != null ? types_183045.length : 0);
			L2: do {
				F.line = 3824;
					L3: while (true) {
					if (!(i_183461 < l_183462)) break L3;
						F.line = 212;
						t_183214 = types_183045[chckIndx(i_183461, 0, types_183045.length+0-1)-0];
						F.line = 213;
						var c_183228 = {heading: t_183214.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 214;
						t_183214.__karaxMarker__ = true;
						L4: do {
							F.line = 215;
							var p_183235 = null;
							F.line = 3822;
							var i_183458 = 0;
							F.line = 3823;
							var l_183459 = (procs_183046 != null ? procs_183046.length : 0);
							L5: do {
								F.line = 3824;
									L6: while (true) {
									if (!(i_183458 < l_183459)) break L6;
										F.line = 215;
										p_183235 = procs_183046[chckIndx(i_183458, 0, procs_183046.length+0-1)-0];
										if (!(p_183235.hasOwnProperty('__karaxMarker__'))) {
										F.line = 217;
										var xx_183236 = p_183235.parentNode.getElementsByClassName("attachedType");
										if ((((xx_183236 != null ? xx_183236.length : 0) == 1) && (xx_183236[chckIndx(0, 0, xx_183236.length+0-1)-0].textContent == t_183214.textContent))) {
										F.line = 220;
										var q_183244 = tree_182020(makeNimstrLit("A"), [text_182122(p_183235.title)]);
										F.line = 221;
										q_183244.setAttribute("href", p_183235.getAttribute("href"));
										F.line = 222;
										if (c_183228.kids != null) { c_183228.kids.push({heading: q_183244, kids: [], sortId: 0, doSort: false}); } else { c_183228.kids = [{heading: q_183244, kids: [], sortId: 0, doSort: false}]; };
										F.line = 223;
										p_183235.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 3826;
										i_183458 = addInt(i_183458, 1);
										if (!(((procs_183046 != null ? procs_183046.length : 0) == l_183459))) {
										F.line = 3827;
										failed_assert_impl_59875(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 224;
						if (new_stuff_183061.kids != null) { new_stuff_183061.kids.push(c_183228); } else { new_stuff_183061.kids = [c_183228]; };
						F.line = 3826;
						i_183461 = addInt(i_183461, 1);
						if (!(((types_183045 != null ? types_183045.length : 0) == l_183462))) {
						F.line = 3827;
						failed_assert_impl_59875(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 225;
		result_183047 = merge_tocs_182996(orig_183043, new_stuff_183061);
	framePtr = F.prev;

	return result_183047;

}

function add_182070(parent_182072, kid_182073) {
			var Tmp1;
				var Tmp2;

	var F={procname:"dochack.add",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
			if (!(parent_182072.nodeName == "TR")) Tmp1 = false; else {				if ((kid_182073.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_182073.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 18;
		var k_182074 = document.createElement("TD");
		F.line = 19;
		k_182074.appendChild(kid_182073);
		F.line = 20;
		parent_182072.appendChild(k_182074);
		}
		else {
			F.line = 22;
		parent_182072.appendChild(kid_182073);
		}
		
	framePtr = F.prev;

	
}

function set_class_182088(e_182090, value_182091) {
	var F={procname:"dochack.setClass",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 25;
		e_182090.setAttribute("class", toJSStr(value_182091));
	framePtr = F.prev;

	
}

function to_html_182375(x_182377, is_root_182378) {
			var Tmp1;

		function HEX3Aanonymous_182418(a_182420, b_182421) {
					var Tmp1;

			var result_182422 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_182420.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_182421.heading == null));					}				if (Tmp1) {
				F.line = 106;
				var x_182439 = a_182420.heading.textContent;
				F.line = 107;
				var y_182440 = b_182421.heading.textContent;
				if ((x_182439 < y_182440)) {
				F.line = 108;
				result_182422 = -1;
				break BeforeRet;
				}
				
				if ((y_182440 < x_182439)) {
				F.line = 109;
				result_182422 = 1;
				break BeforeRet;
				}
				
				F.line = 110;
				result_182422 = 0;
				break BeforeRet;
				}
				else {
					F.line = 113;
					result_182422 = subInt(a_182420.sortId, b_182421.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_182422;

		}

	var result_182379 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_182377 == null)) {
		F.line = 91;
		result_182379 = null;
		break BeforeRet;
		}
		
		if (((x_182377.kids != null ? x_182377.kids.length : 0) == 0)) {
		if ((x_182377.heading == null)) {
		F.line = 93;
		result_182379 = null;
		break BeforeRet;
		}
		
		F.line = 94;
		result_182379 = x_182377.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 95;
		result_182379 = tree_182020(makeNimstrLit("DIV"), []);
			if (!!((x_182377.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_182377.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 97;
		add_182070(result_182379, x_182377.heading.cloneNode(true));
		}
		
		F.line = 98;
		var ul_182415 = tree_182020(makeNimstrLit("UL"), []);
		if (is_root_182378) {
		F.line = 100;
		set_class_182088(ul_182415, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 102;
		set_class_182088(ul_182415, makeNimstrLit("simple"));
		}
		
		if (x_182377.doSort) {
		F.line = 104;
		x_182377.kids.sort(HEX3Aanonymous_182418);
		}
		
		L2: do {
			F.line = 115;
			var k_182614 = null;
			F.line = 3820;
			var colontmp__183485 = null;
			F.line = 115;
			colontmp__183485 = x_182377.kids;
			F.line = 3822;
			var i_183487 = 0;
			F.line = 3823;
			var l_183488 = (colontmp__183485 != null ? colontmp__183485.length : 0);
			L3: do {
				F.line = 3824;
					L4: while (true) {
					if (!(i_183487 < l_183488)) break L4;
						F.line = 115;
						k_182614 = colontmp__183485[chckIndx(i_183487, 0, colontmp__183485.length+0-1)-0];
						F.line = 116;
						var y_182615 = to_html_182375(k_182614, false);
						if (!((y_182615 == null))) {
						F.line = 118;
						add_182070(ul_182415, tree_182020(makeNimstrLit("LI"), [y_182615]));
						}
						
						F.line = 3826;
						i_183487 = addInt(i_183487, 1);
						if (!(((colontmp__183485 != null ? colontmp__183485.length : 0) == l_183488))) {
						F.line = 3827;
						failed_assert_impl_59875(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_182415.childNodes.length == 0))) {
		F.line = 119;
		add_182070(result_182379, ul_182415);
		}
		
		if ((result_182379.childNodes.length == 0)) {
		F.line = 120;
		result_182379 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_182379;

}

function replace_by_id_182142(id_182144, new_tree_182145) {
	var F={procname:"dochack.replaceById",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 32;
		var x_182146 = document.getElementById(id_182144);
		F.line = 33;
		x_182146.parentNode.replaceChild(new_tree_182145, x_182146);
		F.line = 34;
		new_tree_182145.id = id_182144;
	framePtr = F.prev;

	
}

function togglevis_183299(d_183301) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 230;
		    if (d_183301.style.display == 'none')
      d_183301.style.display = 'inline';
    else
      d_183301.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_183317) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 238;
		var toc_183318 = document.getElementById("toc-list");
		if ((alternative_183285[0] == null)) {
		F.line = 240;
		var tt_183337 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 241;
		to_toc_182673(toc_183318, tt_183337);
		F.line = 242;
		tt_183337 = tt_183337.kids[chckIndx(0, 0, tt_183337.kids.length+0-1)-0];
		F.line = 244;
		var types_183352 = [[]];
		F.line = 245;
		var procs_183367 = [[]];
		F.line = 247;
		extract_items_182307(tt_183337, "Types", types_183352, 0);
		F.line = 248;
		extract_items_182307(tt_183337, "Procs", procs_183367, 0);
		F.line = 249;
		extract_items_182307(tt_183337, "Converters", procs_183367, 0);
		F.line = 250;
		extract_items_182307(tt_183337, "Methods", procs_183367, 0);
		F.line = 251;
		extract_items_182307(tt_183337, "Templates", procs_183367, 0);
		F.line = 252;
		extract_items_182307(tt_183337, "Macros", procs_183367, 0);
		F.line = 253;
		extract_items_182307(tt_183337, "Iterators", procs_183367, 0);
		F.line = 255;
		var ntoc_183375 = build_toc_183041(tt_183337, types_183352[0], procs_183367[0]);
		F.line = 256;
		var x_183376 = to_html_182375(ntoc_183375, true);
		F.line = 257;
		alternative_183285[0] = tree_182020(makeNimstrLit("DIV"), [x_183376]);
		}
		
		if ((value_183317 == "type")) {
		F.line = 259;
		replace_by_id_182142("tocRoot", alternative_183285[0]);
		}
		else {
			F.line = 261;
		replace_by_id_182142("tocRoot", tree_182020(makeNimstrLit("DIV"), []));
		}
		
		F.line = 262;
		togglevis_183299(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_183491 = [null];
var contents_183493 = [null];
var oldtoc_183742 = [null];
var timer_183743 = [null];

function raiseRangeError() {
		var e_55902 = null;
		e_55902 = {m_type: NTI41662, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_55902.message = nimCopy(null, makeNimstrLit("value out of range"), NTI37040);
		e_55902.parent = null;
		raiseException(e_55902, "RangeError");

	
}

function nsuToLowerAsciiChar(c_172980) {
	var result_172981 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_172980] != undefined)) {
		F.line = 222;
		result_172981 = chckRange(addInt(c_172980, 32), 0, 255);
		}
		else {
			F.line = 224;
			result_172981 = c_172980;
		}
		
	framePtr = F.prev;

	return result_172981;

}

function fuzzy_match_181070(pattern_181072, str_181073) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_181077 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_181078 = -100;
		F.line = 38;
		var header_matched_181079 = false;
		F.line = 39;
		var unmatched_leading_char_count_181081 = 0;
		F.line = 40;
		var consecutive_match_count_181083 = 0;
		F.line = 41;
		var str_index_181085 = 0;
		F.line = 42;
		var pat_index_181087 = 0;
		F.line = 43;
		var score_181089 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_181085 < (str_181073 != null ? str_181073.length : 0)) && (pat_index_181087 < (pattern_181072 != null ? pattern_181072.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_181096 = nsuToLowerAsciiChar(pattern_181072.charCodeAt(chckIndx(pat_index_181087, 0, pattern_181072.length+0-1)-0));
						F.line = 52;
						var str_char_181097 = nsuToLowerAsciiChar(str_181073.charCodeAt(chckIndx(str_index_181085, 0, str_181073.length+0-1)-0));
						if ((ConstSet3[pattern_char_181096] != undefined)) {
						F.line = 56;
						pat_index_181087 = addInt(pat_index_181087, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_181097] != undefined)) {
						F.line = 59;
						str_index_181085 = addInt(str_index_181085, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_181079) && (str_char_181097 == 58))) {
						F.line = 65;
						header_matched_181079 = true;
						F.line = 66;
						score_state_181078 = -100;
						F.line = 67;
						score_181089 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_181089)));
						F.line = 68;
						pat_index_181087 = 0;
						F.line = 69;
						str_index_181085 = addInt(str_index_181085, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_181097 == pattern_char_181096)) {
						F.line = 73;
						switch (score_state_181078) {
						case -100:
						case 20:
							F.line = 75;
							score_state_181078 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_181078 = 5;
							F.line = 78;
							score_181089 = addInt(score_181089, score_state_181078);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_181083 = addInt(consecutive_match_count_181083, 1);
							F.line = 82;
							score_state_181078 = 5;
							F.line = 83;
							score_181089 = addInt(score_181089, mulInt(5, consecutive_match_count_181083));
							if ((score_state_181078 == 10)) {
							F.line = 86;
							score_181089 = addInt(score_181089, 10);
							}
							
							F.line = 88;
							var on_boundary_181172 = (pat_index_181087 == (pattern_181072 != null ? (pattern_181072.length-1) : -1));
							if ((!(on_boundary_181172) && (str_index_181085 < (str_181073 != null ? (str_181073.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_181173 = nsuToLowerAsciiChar(pattern_181072.charCodeAt(chckIndx(addInt(pat_index_181087, 1), 0, pattern_181072.length+0-1)-0));
							F.line = 92;
							var next_str_char_181174 = nsuToLowerAsciiChar(str_181073.charCodeAt(chckIndx(addInt(str_index_181085, 1), 0, str_181073.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_181174] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_181174 == next_pattern_char_181173));							}							on_boundary_181172 = Tmp4;
							}
							
							if (on_boundary_181172) {
							F.line = 100;
							score_state_181078 = 20;
							F.line = 100;
							score_181089 = addInt(score_181089, score_state_181078);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_181073.charCodeAt(chckIndx(subInt(str_index_181085, 1), 0, str_181073.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_181073.charCodeAt(chckIndx(subInt(str_index_181085, 1), 0, str_181073.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_181073.charCodeAt(chckIndx(str_index_181085, 0, str_181073.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_181212 = Tmp5;
							if (is_leading_char_181212) {
							F.line = 110;
							score_state_181078 = 10;
							}
							else {
								F.line = 114;
								score_state_181078 = 0;
								F.line = 114;
								score_181089 = addInt(score_181089, score_state_181078);
							}
							
							break;
						}
						F.line = 115;
						pat_index_181087 = addInt(pat_index_181087, 1);
						}
						else {
							F.line = 118;
							switch (score_state_181078) {
							case -100:
								F.line = 120;
								score_state_181078 = -3;
								F.line = 120;
								score_181089 = addInt(score_181089, score_state_181078);
								break;
							case 5:
								F.line = 123;
								score_state_181078 = -1;
								F.line = 123;
								score_181089 = addInt(score_181089, score_state_181078);
								F.line = 124;
								consecutive_match_count_181083 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_181081 < 3)) {
								F.line = 128;
								score_state_181078 = -3;
								F.line = 128;
								score_181089 = addInt(score_181089, score_state_181078);
								}
								
								F.line = 129;
								unmatched_leading_char_count_181081 = addInt(unmatched_leading_char_count_181081, 1);
								break;
							default: 
								F.line = 132;
								score_state_181078 = -1;
								F.line = 132;
								score_181089 = addInt(score_181089, score_state_181078);
								break;
							}
						}
						
						F.line = 134;
						str_index_181085 = addInt(str_index_181085, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_181077, {Field0: nimMax(0, score_181089), Field1: (0 < score_181089)}, NTI181074);
	framePtr = F.prev;

	return result_181077;

}

function text_182105(s_182107) {
	var result_182108 = null;

	var F={procname:"dochack.text",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 26;
		result_182108 = document.createTextNode(toJSStr(s_182107));
	framePtr = F.prev;

	return result_182108;

}

function dosearch_183510(value_183512) {

		function HEX3Aanonymous_183670(a_183679, b_183680) {
			var result_183684 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 305;
				result_183684 = subInt(b_183680["Field1"], a_183679["Field1"]);
			framePtr = F.prev;

			return result_183684;

		}

	var result_183513 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_183491[0] != null ? db_183491[0].length : 0) == 0)) {
		F.line = 272;
		var stuff_183519 = null;
		F.line = 273;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_183519 = doc.documentElement;
    
		F.line = 286;
		db_183491[0] = nimCopy(null, stuff_183519.getElementsByClassName("reference"), NTI75245);
		F.line = 287;
		contents_183493[0] = nimCopy(null, [], NTI183532);
		L1: do {
			F.line = 288;
			var ahref_183614 = null;
			F.line = 3822;
			var i_183811 = 0;
			F.line = 3823;
			var l_183812 = (db_183491[0] != null ? db_183491[0].length : 0);
			L2: do {
				F.line = 3824;
					L3: while (true) {
					if (!(i_183811 < l_183812)) break L3;
						F.line = 288;
						ahref_183614 = db_183491[0][chckIndx(i_183811, 0, db_183491[0].length+0-1)-0];
						F.line = 289;
						if (contents_183493[0] != null) { contents_183493[0].push(ahref_183614.getAttribute("data-doc-search-tag")); } else { contents_183493[0] = [ahref_183614.getAttribute("data-doc-search-tag")]; };
						F.line = 3826;
						i_183811 = addInt(i_183811, 1);
						if (!(((db_183491[0] != null ? db_183491[0].length : 0) == l_183812))) {
						F.line = 3827;
						failed_assert_impl_59875(makeNimstrLit("/home/travis/build/nim-lang/Nim/lib/system.nim(3827, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 290;
		var ul_183625 = tree_182020(makeNimstrLit("UL"), []);
		F.line = 291;
		result_183513 = tree_182020(makeNimstrLit("DIV"), []);
		F.line = 292;
		set_class_182088(result_183513, makeNimstrLit("search_results"));
		F.line = 293;
		var matches_183644 = [];
		L4: do {
			F.line = 294;
			var i_183656 = 0;
			F.line = 3096;
			var colontmp__183818 = 0;
			F.line = 294;
			colontmp__183818 = (db_183491[0] != null ? db_183491[0].length : 0);
			F.line = 3097;
			var i_183819 = 0;
			L5: do {
				F.line = 3098;
					L6: while (true) {
					if (!(i_183819 < colontmp__183818)) break L6;
						F.line = 294;
						i_183656 = i_183819;
						L7: do {
							F.line = 295;
							var c_183657 = contents_183493[0][chckIndx(i_183656, 0, contents_183493[0].length+0-1)-0];
							if (((c_183657 == "Examples") || (c_183657 == "PEG construction"))) {
							F.line = 300;
							break L7;
							}
							
							F.line = 301;
							var colontmp__183828 = {Field0: 0, Field1: false};
							F.line = 301;
							var score_183658 = 0;
							F.line = 301;
							var matched_183659 = false;
							F.line = 301;
							nimCopy(colontmp__183828, fuzzy_match_181070(value_183512, c_183657), NTI181074);
							F.line = 301;
							score_183658 = colontmp__183828["Field0"];
							F.line = 301;
							matched_183659 = colontmp__183828["Field1"];
							if (matched_183659) {
							F.line = 303;
							if (matches_183644 != null) { matches_183644.push({Field0: db_183491[0][chckIndx(i_183656, 0, db_183491[0].length+0-1)-0], Field1: score_183658}); } else { matches_183644 = [{Field0: db_183491[0][chckIndx(i_183656, 0, db_183491[0].length+0-1)-0], Field1: score_183658}]; };
							}
							
						} while(false);
						F.line = 3100;
						i_183819 = addInt(i_183819, 1);
					}
			} while(false);
		} while(false);
		F.line = 305;
		matches_183644.sort(HEX3Aanonymous_183670);
		L8: do {
			F.line = 306;
			var i_183722 = 0;
			F.line = 3096;
			var colontmp__183824 = 0;
			F.line = 306;
			colontmp__183824 = nimMin((matches_183644 != null ? matches_183644.length : 0), 19);
			F.line = 3097;
			var i_183825 = 0;
			L9: do {
				F.line = 3098;
					L10: while (true) {
					if (!(i_183825 < colontmp__183824)) break L10;
						F.line = 306;
						i_183722 = i_183825;
						F.line = 307;
						matches_183644[chckIndx(i_183722, 0, matches_183644.length+0-1)-0]["Field0"].innerHTML = matches_183644[chckIndx(i_183722, 0, matches_183644.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 308;
						add_182070(ul_183625, tree_182020(makeNimstrLit("LI"), [matches_183644[chckIndx(i_183722, 0, matches_183644.length+0-1)-0]["Field0"]]));
						F.line = 3100;
						i_183825 = addInt(i_183825, 1);
					}
			} while(false);
		} while(false);
		if ((ul_183625.childNodes.length == 0)) {
		F.line = 310;
		add_182070(result_183513, tree_182020(makeNimstrLit("B"), [text_182105(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 312;
			add_182070(result_183513, tree_182020(makeNimstrLit("B"), [text_182105(makeNimstrLit("search results"))]));
			F.line = 313;
			add_182070(result_183513, ul_183625);
		}
		
	framePtr = F.prev;

	return result_183513;

}

function search() {

		function wrapper_183759() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 320;
				var elem_183761 = document.getElementById("searchInput");
				F.line = 321;
				var value_183762 = elem_183761.value;
				if (!(((value_183762 != null ? value_183762.length : 0) == 0))) {
				if ((oldtoc_183742[0] == null)) {
				F.line = 324;
				oldtoc_183742[0] = document.getElementById("tocRoot");
				}
				
				F.line = 325;
				var results_183768 = dosearch_183510(value_183762);
				F.line = 326;
				replace_by_id_182142("tocRoot", results_183768);
				}
				else {
				if (!((oldtoc_183742[0] == null))) {
				F.line = 328;
				replace_by_id_182142("tocRoot", oldtoc_183742[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_183743[0] == null))) {
		F.line = 330;
		clearTimeout(timer_183743[0]);
		}
		
		F.line = 331;
		timer_183743[0] = setTimeout(wrapper_183759, 400);
	framePtr = F.prev;

	
}
